import React from 'react';
import { motion } from 'framer-motion';
import { 
  BarChart, 
  Bar, 
  XAxis, 
  YAxis, 
  CartesianGrid, 
  Tooltip, 
  ResponsiveContainer,
  PieChart,
  Pie,
  Cell
} from 'recharts';
import { AlertTriangle, TrendingDown, Shield } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '../ui/Card';
import { useApi } from '../../hooks/useApi';
import { getSeverityColor } from '../../lib/utils';

const VulnerabilityHeatmap = () => {
  const { data: vulnerabilityStats, loading } = useApi('/scan/vulnerability-stats');

  // Default data if no stats available
  const defaultData = {
    byType: [
      { name: 'Reentrancy', count: 0, severity: 'High' },
      { name: 'Integer Overflow', count: 0, severity: 'Medium' },
      { name: 'Access Control', count: 0, severity: 'High' },
      { name: 'Unchecked Calls', count: 0, severity: 'Low' }
    ],
    bySeverity: [
      { name: 'Critical', count: 0, color: '#dc2626' },
      { name: 'High', count: 0, color: '#ea580c' },
      { name: 'Medium', count: 0, color: '#ca8a04' },
      { name: 'Low', count: 0, color: '#2563eb' }
    ],
    totalVulnerabilities: 0,
    trend: 0
  };

  const stats = vulnerabilityStats || defaultData;

  const COLORS = ['#dc2626', '#ea580c', '#ca8a04', '#2563eb'];

  if (loading) {
    return (
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <AlertTriangle className="h-5 w-5" />
            Vulnerability Overview
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="animate-pulse">
            <div className="h-64 bg-gray-200 rounded mb-4"></div>
            <div className="grid grid-cols-2 gap-4">
              <div className="h-32 bg-gray-200 rounded"></div>
              <div className="h-32 bg-gray-200 rounded"></div>
            </div>
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <AlertTriangle className="h-5 w-5 text-red-600" />
          Vulnerability Overview
        </CardTitle>
      </CardHeader>
      <CardContent>
        {stats.totalVulnerabilities > 0 ? (
          <div className="space-y-6">
            {/* Summary Stats */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                className="text-center p-4 bg-red-50 border border-red-200 rounded-lg"
              >
                <div className="text-2xl font-bold text-red-600">
                  {stats.totalVulnerabilities}
                </div>
                <div className="text-sm text-red-700">Total Vulnerabilities</div>
              </motion.div>
              
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.1 }}
                className="text-center p-4 bg-yellow-50 border border-yellow-200 rounded-lg"
              >
                <div className="text-2xl font-bold text-yellow-600">
                  {stats.bySeverity.find(s => s.name === 'Critical')?.count || 0}
                </div>
                <div className="text-sm text-yellow-700">Critical Issues</div>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.2 }}
                className="text-center p-4 bg-green-50 border border-green-200 rounded-lg"
              >
                <div className="flex items-center justify-center gap-1 text-2xl font-bold text-green-600">
                  {stats.trend >= 0 ? '+' : ''}{stats.trend}%
                  <TrendingDown className="h-5 w-5" />
                </div>
                <div className="text-sm text-green-700">Security Trend</div>
              </motion.div>
            </div>

            {/* Charts */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* Vulnerability Types Bar Chart */}
              <motion.div
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: 0.3 }}
              >
                <h3 className="text-lg font-semibold mb-3">Vulnerabilities by Type</h3>
                <ResponsiveContainer width="100%" height={250}>
                  <BarChart data={stats.byType}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis 
                      dataKey="name" 
                      angle={-45}
                      textAnchor="end"
                      height={60}
                      fontSize={12}
                    />
                    <YAxis />
                    <Tooltip />
                    <Bar 
                      dataKey="count" 
                      fill="#dc2626"
                      radius={[4, 4, 0, 0]}
                    />
                  </BarChart>
                </ResponsiveContainer>
              </motion.div>

              {/* Severity Distribution Pie Chart */}
              <motion.div
                initial={{ opacity: 0, x: 20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: 0.4 }}
              >
                <h3 className="text-lg font-semibold mb-3">Severity Distribution</h3>
                <ResponsiveContainer width="100%" height={250}>
                  <PieChart>
                    <Pie
                      data={stats.bySeverity.filter(item => item.count > 0)}
                      cx="50%"
                      cy="50%"
                      labelLine={false}
                      label={({ name, percent }) => 
                        percent > 0 ? `${name} ${(percent * 100).toFixed(0)}%` : ''
                      }
                      outerRadius={80}
                      fill="#8884d8"
                      dataKey="count"
                    >
                      {stats.bySeverity.map((entry, index) => (
                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                      ))}
                    </Pie>
                    <Tooltip />
                  </PieChart>
                </ResponsiveContainer>
              </motion.div>
            </div>

            {/* Vulnerability Details List */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.5 }}
            >
              <h3 className="text-lg font-semibold mb-3">Most Common Issues</h3>
              <div className="space-y-2">
                {stats.byType
                  .filter(vuln => vuln.count > 0)
                  .sort((a, b) => b.count - a.count)
                  .slice(0, 5)
                  .map((vuln, index) => (
                    <div
                      key={vuln.name}
                      className="flex items-center justify-between p-3 bg-gray-50 rounded-lg"
                    >
                      <div className="flex items-center space-x-3">
                        <div className="w-2 h-2 rounded-full bg-red-500"></div>
                        <span className="font-medium">{vuln.name}</span>
                        <span className={`px-2 py-1 text-xs rounded-full ${getSeverityColor(vuln.severity)}`}>
                          {vuln.severity}
                        </span>
                      </div>
                      <span className="font-bold text-red-600">{vuln.count}</span>
                    </div>
                  ))
                }
              </div>
            </motion.div>
          </div>
        ) : (
          // Empty State
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            className="text-center py-12"
          >
            <Shield className="h-16 w-16 text-green-500 mx-auto mb-4" />
            <h3 className="text-xl font-semibold text-gray-900 mb-2">
              No Vulnerabilities Found
            </h3>
            <p className="text-gray-600 mb-6">
              Great news! Your analyzed contracts appear to be secure.
            </p>
            <div className="bg-green-50 border border-green-200 rounded-lg p-4 inline-block">
              <p className="text-green-700 text-sm">
                Keep up the good work with secure coding practices!
              </p>
            </div>
          </motion.div>
        )}
      </CardContent>
    </Card>
  );
};

export default VulnerabilityHeatmap;
